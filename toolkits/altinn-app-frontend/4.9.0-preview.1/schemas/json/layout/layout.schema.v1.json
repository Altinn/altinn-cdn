{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://altinncdn.no/schemas/json/layout/layout.schema.v1.json",
  "$ref": "#/definitions/ILayoutFile",
  "definitions": {
    "AnyComponent": {
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "The component type",
          "enum": [
            "Accordion",
            "AccordionGroup",
            "ActionButton",
            "Address",
            "Alert",
            "AttachmentList",
            "Audio",
            "Button",
            "ButtonGroup",
            "Cards",
            "Checkboxes",
            "Custom",
            "CustomButton",
            "Datepicker",
            "Dropdown",
            "FileUpload",
            "FileUploadWithTag",
            "Grid",
            "Group",
            "Header",
            "IFrame",
            "Image",
            "Input",
            "InstanceInformation",
            "InstantiationButton",
            "Likert",
            "LikertItem",
            "Link",
            "List",
            "Map",
            "MultipleSelect",
            "NavigationBar",
            "NavigationButtons",
            "Number",
            "Panel",
            "Paragraph",
            "Payment",
            "PaymentDetails",
            "PrintButton",
            "RadioButtons",
            "RepeatingGroup",
            "Subform",
            "Summary",
            "Summary2",
            "Tabs",
            "Text",
            "TextArea",
            "Video"
          ]
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Accordion"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompAccordion"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "AccordionGroup"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompAccordionGroup"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ActionButton"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompActionButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Address"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompAddress"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Alert"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompAlert"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "AttachmentList"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompAttachmentList"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Audio"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompAudio"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Button"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ButtonGroup"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompButtonGroup"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Cards"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompCards"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Checkboxes"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompCheckboxes"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Custom"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompCustom"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "CustomButton"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompCustomButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Datepicker"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompDatepicker"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Dropdown"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompDropdown"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "FileUpload"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompFileUpload"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "FileUploadWithTag"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompFileUploadWithTag"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Grid"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompGrid"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Group"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompGroup"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Header"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompHeader"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "IFrame"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompIFrame"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Image"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompImage"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Input"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompInput"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "InstanceInformation"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompInstanceInformation"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "InstantiationButton"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompInstantiationButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Likert"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompLikert"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "LikertItem"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompLikertItem"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Link"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompLink"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "List"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompList"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Map"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompMap"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "MultipleSelect"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompMultipleSelect"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "NavigationBar"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompNavigationBar"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "NavigationButtons"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompNavigationButtons"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Number"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompNumber"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Panel"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompPanel"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Paragraph"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompParagraph"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Payment"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompPayment"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "PaymentDetails"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompPaymentDetails"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "PrintButton"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompPrintButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RadioButtons"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompRadioButtons"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "RepeatingGroup"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompRepeatingGroup"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Subform"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompSubform"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Summary"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompSummary"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Summary2"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompSummary2"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Tabs"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompTabs"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Text"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompText"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "TextArea"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompTextArea"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Video"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CompVideo"
          }
        }
      ]
    },
    "CompAccordion": {
      "$ref": "#/definitions/CompAccordionExternal"
    },
    "CompAccordionGroup": {
      "$ref": "#/definitions/CompAccordionGroupExternal"
    },
    "CompActionButton": {
      "$ref": "#/definitions/CompActionButtonExternal"
    },
    "CompAddress": {
      "$ref": "#/definitions/CompAddressExternal"
    },
    "CompAlert": {
      "$ref": "#/definitions/CompAlertExternal"
    },
    "CompAttachmentList": {
      "$ref": "#/definitions/CompAttachmentListExternal"
    },
    "CompAudio": {
      "$ref": "#/definitions/CompAudioExternal"
    },
    "CompButton": {
      "$ref": "#/definitions/CompButtonExternal"
    },
    "CompButtonGroup": {
      "$ref": "#/definitions/CompButtonGroupExternal"
    },
    "CompCards": {
      "$ref": "#/definitions/CompCardsExternal"
    },
    "CompCheckboxes": {
      "$ref": "#/definitions/CompCheckboxesExternal"
    },
    "CompCustom": {
      "$ref": "#/definitions/CompCustomExternal"
    },
    "CompCustomButton": {
      "$ref": "#/definitions/CompCustomButtonExternal"
    },
    "CompDatepicker": {
      "$ref": "#/definitions/CompDatepickerExternal"
    },
    "CompDropdown": {
      "$ref": "#/definitions/CompDropdownExternal"
    },
    "CompFileUpload": {
      "$ref": "#/definitions/CompFileUploadExternal"
    },
    "CompFileUploadWithTag": {
      "$ref": "#/definitions/CompFileUploadWithTagExternal"
    },
    "CompGrid": {
      "$ref": "#/definitions/CompGridExternal"
    },
    "CompGroup": {
      "$ref": "#/definitions/CompGroupExternal"
    },
    "CompHeader": {
      "$ref": "#/definitions/CompHeaderExternal"
    },
    "CompIFrame": {
      "$ref": "#/definitions/CompIFrameExternal"
    },
    "CompImage": {
      "$ref": "#/definitions/CompImageExternal"
    },
    "CompInput": {
      "$ref": "#/definitions/CompInputExternal"
    },
    "CompInstanceInformation": {
      "$ref": "#/definitions/CompInstanceInformationExternal"
    },
    "CompInstantiationButton": {
      "$ref": "#/definitions/CompInstantiationButtonExternal"
    },
    "CompLikert": {
      "$ref": "#/definitions/CompLikertExternal"
    },
    "CompLikertItem": {
      "$ref": "#/definitions/CompLikertItemExternal"
    },
    "CompLink": {
      "$ref": "#/definitions/CompLinkExternal"
    },
    "CompList": {
      "$ref": "#/definitions/CompListExternal"
    },
    "CompMap": {
      "$ref": "#/definitions/CompMapExternal"
    },
    "CompMultipleSelect": {
      "$ref": "#/definitions/CompMultipleSelectExternal"
    },
    "CompNavigationBar": {
      "$ref": "#/definitions/CompNavigationBarExternal"
    },
    "CompNavigationButtons": {
      "$ref": "#/definitions/CompNavigationButtonsExternal"
    },
    "CompNumber": {
      "$ref": "#/definitions/CompNumberExternal"
    },
    "CompPanel": {
      "$ref": "#/definitions/CompPanelExternal"
    },
    "CompParagraph": {
      "$ref": "#/definitions/CompParagraphExternal"
    },
    "CompPayment": {
      "$ref": "#/definitions/CompPaymentExternal"
    },
    "CompPaymentDetails": {
      "$ref": "#/definitions/CompPaymentDetailsExternal"
    },
    "CompPrintButton": {
      "$ref": "#/definitions/CompPrintButtonExternal"
    },
    "CompRadioButtons": {
      "$ref": "#/definitions/CompRadioButtonsExternal"
    },
    "CompRepeatingGroup": {
      "$ref": "#/definitions/CompRepeatingGroupExternal"
    },
    "CompSubform": {
      "$ref": "#/definitions/CompSubformExternal"
    },
    "CompSummary": {
      "$ref": "#/definitions/CompSummaryExternal"
    },
    "CompSummary2": {
      "$ref": "#/definitions/CompSummary2External"
    },
    "CompTabs": {
      "$ref": "#/definitions/CompTabsExternal"
    },
    "CompText": {
      "$ref": "#/definitions/CompTextExternal"
    },
    "CompTextArea": {
      "$ref": "#/definitions/CompTextAreaExternal"
    },
    "CompVideo": {
      "$ref": "#/definitions/CompVideoExternal"
    },
    "ActionButtonStyle": {
      "title": "Button style",
      "description": "The style/color scheme of the button.",
      "enum": [
        "primary",
        "secondary"
      ]
    },
    "AlertSeverity": {
      "title": "Alert severity",
      "description": "The severity of the alert",
      "enum": [
        "success",
        "warning",
        "danger",
        "info"
      ]
    },
    "AllowedValidationMasks": {
      "title": "Validation types",
      "description": "List of validation types to show",
      "type": "array",
      "items": {
        "enum": [
          "Schema",
          "Component",
          "Expression",
          "CustomBackend",
          "Required",
          "AllExceptRequired",
          "All"
        ]
      }
    },
    "AnySummaryOverrideProps": {
      "title": "AnySummaryOverrideProps",
      "anyOf": [
        {
          "$ref": "#/definitions/InputSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/CheckboxSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/RadioSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/DropdownSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/MultipleSelectSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/GroupSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/TextAreaSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/RepeatingGroupSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/DatepickerSummaryOverrideProps"
        },
        {
          "$ref": "#/definitions/ListSummaryOverrideProps"
        }
      ]
    },
    "AudioSrc": {
      "title": "AudioSrc",
      "examples": [
        {
          "nb": "https://example.com/audio.mp3",
          "nn": "https://example.com/audio.mp3",
          "en": "https://example.com/audio.mp3"
        }
      ],
      "type": "object",
      "properties": {
        "nb": {
          "title": "Audio source (when using norwegian bokmål language)",
          "type": "string"
        },
        "nn": {
          "title": "Audio source (when using norwegian nynorsk language)",
          "type": "string"
        },
        "en": {
          "title": "Audio source (when using english language)",
          "type": "string"
        }
      },
      "additionalProperties": {
        "title": "Audio source (when using other languages)",
        "type": "string"
      }
    },
    "ButtonColor": {
      "title": "Button color override",
      "description": "The color scheme of the button.",
      "enum": [
        "first",
        "second",
        "success",
        "danger"
      ]
    },
    "ButtonMode": {
      "title": "Mode",
      "description": "The mode of the button",
      "default": "submit",
      "enum": [
        "submit",
        "save",
        "instantiate"
      ]
    },
    "ButtonSize": {
      "title": "Button size override",
      "description": "The size of the button.",
      "enum": [
        "sm",
        "md",
        "lg",
        "small",
        "medium",
        "large"
      ]
    },
    "ButtonStyle": {
      "title": "Button style",
      "description": "The style/color scheme of the button.",
      "default": "secondary",
      "enum": [
        "primary",
        "secondary"
      ]
    },
    "CardConfigExternal": {
      "title": "CardConfigExternal",
      "type": "object",
      "properties": {
        "media": {
          "title": "Media",
          "description": "Media to display on the top/bottom of the card (must reference an Image, Audio or Video component",
          "type": "string"
        },
        "title": {
          "title": "Title",
          "description": "Title of the card",
          "type": "string"
        },
        "description": {
          "title": "Description/body text",
          "description": "Full text displayed underneath the title, above any component children",
          "type": "string"
        },
        "footer": {
          "title": "Footer",
          "description": "Footer text of the card",
          "type": "string"
        },
        "children": {
          "title": "Children",
          "description": "Child component IDs to show inside the card",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "CardsColor": {
      "title": "Card color",
      "description": "The color style for these cards",
      "enum": [
        "neutral",
        "subtle"
      ]
    },
    "CardsMediaPosition": {
      "title": "ImagePosition",
      "description": "Position of the media (image/video/audio) in each card",
      "default": "top",
      "enum": [
        "top",
        "bottom"
      ]
    },
    "CheckboxSummaryOverrideProps": {
      "allOf": [
        {
          "$ref": "#/definitions/ISummaryOverridesCommon"
        },
        {
          "title": "Summary properties",
          "description": "Properties for how to display the summary of the component",
          "type": "object",
          "properties": {
            "displayType": {
              "title": "Display type",
              "description": "How data should be displayed for the radio in the summary",
              "enum": [
                "list",
                "string"
              ]
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "componentId": true,
            "hidden": true,
            "forceShow": true,
            "emptyFieldText": true,
            "displayType": true
          },
          "required": [
            "componentId"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ClientAction": {
      "title": "ClientAction",
      "anyOf": [
        {
          "$ref": "#/definitions/NextPageAction"
        },
        {
          "$ref": "#/definitions/PreviousPageAction"
        },
        {
          "$ref": "#/definitions/NavigateToPageAction"
        },
        {
          "$ref": "#/definitions/SubformAction"
        }
      ]
    },
    "CloseSubformAction": {
      "title": "CloseSubformAction",
      "type": "object",
      "properties": {
        "id": {
          "const": "closeSubform"
        },
        "type": {
          "const": "ClientAction"
        },
        "validation": {
          "$ref": "#/definitions/PageValidation"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "additionalProperties": false
    },
    "CompAccordionExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompAccordionExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Accordion"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "The title of the accordion",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "children": {
              "title": "Children",
              "description": "List of child component IDs to show inside the Accordion (limited to a few component types)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "openByDefault": {
              "title": "Open by default",
              "description": "Boolean value indicating if the accordion should be open by default",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            "headingLevel": {
              "$ref": "#/definitions/HeadingLevel"
            }
          },
          "required": [
            "type",
            "children"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "children": true,
            "openByDefault": true,
            "headingLevel": true
          },
          "required": [
            "id",
            "type",
            "children"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompAccordionGroupExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompAccordionGroupExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "AccordionGroup"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "The title of the accordion group",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "children": {
              "title": "Children",
              "description": "List of child component IDs to show inside the Accordion (limited to a few component types)",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "children"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "children": true
          },
          "required": [
            "id",
            "type",
            "children"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompActionButtonExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompActionButtonExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "ActionButton"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Button title/text",
                  "description": "The text to display on the button.",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "action": {
              "title": "Action",
              "description": "The action to perform when the button is clicked.",
              "enum": [
                "instantiate",
                "confirm",
                "sign",
                "reject"
              ]
            },
            "buttonStyle": {
              "$ref": "#/definitions/ActionButtonStyle"
            }
          },
          "required": [
            "type",
            "action",
            "buttonStyle"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "action": true,
            "buttonStyle": true
          },
          "required": [
            "id",
            "type",
            "action",
            "buttonStyle"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompAddressExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompAddressExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Address"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "Title of the component",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "careOfTitle": {
                      "title": "Care Of Title",
                      "description": "Title for care-of",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "zipCodeTitle": {
                      "title": "Zip Code Title",
                      "description": "Title for the zip code",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "postPlaceTitle": {
                      "title": "Post place Title",
                      "description": "Title for post place",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "houseNumberTitle": {
                      "title": "House number Title",
                      "description": "Title for house number",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "careOfTitle": true,
                    "zipCodeTitle": true,
                    "postPlaceTitle": true,
                    "houseNumberTitle": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsForAddress"
            },
            "saveWhileTyping": {
              "default": true,
              "$ref": "#/definitions/SaveWhileTyping"
            },
            "simplified": {
              "title": "Simplified",
              "description": "Whether to use the simplified address input or not",
              "default": true,
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "saveWhileTyping": true,
            "simplified": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompAlertExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompAlertExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Alert"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title of the alert",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "body": {
                  "title": "Body",
                  "description": "The body text of the alert",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "severity": {
              "$ref": "#/definitions/AlertSeverity"
            }
          },
          "required": [
            "type",
            "severity"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "severity": true
          },
          "required": [
            "id",
            "type",
            "severity"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompAttachmentListExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompAttachmentListExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "AttachmentList"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "Title shown above the attachment list",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "dataTypeIds": {
              "title": "Data type IDs",
              "description": "List of data type IDs for the attachment list to show",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "dataTypeIds": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompAudioExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompAudioExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Audio"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "altText": {
                  "title": "Alt text",
                  "description": "Alternative text for the audio (for screen readers).",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "audio": {
              "$ref": "#/definitions/IAudio"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "audio": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompButtonExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompButtonExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Button"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title/text on the button",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "$ref": "#/definitions/ButtonMode"
            },
            "mapping": {
              "$ref": "#/definitions/IMapping"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "mode": true,
            "mapping": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompButtonGroupExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompButtonGroupExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "ButtonGroup"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "children": {
              "title": "Children",
              "description": "Child component IDs of button-like components to be rendered in this group",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "children"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "children": true
          },
          "required": [
            "id",
            "type",
            "children"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompCardsExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompCardsExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Cards"
            },
            "textResourceBindings": {
              "$ref": "#/definitions/TRBSummarizable"
            },
            "mediaPosition": {
              "$ref": "#/definitions/CardsMediaPosition"
            },
            "minMediaHeight": {
              "title": "minMediaHeight",
              "description": "Fixed minimum height of media (if media is present)",
              "examples": [
                "100px",
                "100%",
                "100rem"
              ],
              "default": "150px",
              "type": "string"
            },
            "minWidth": {
              "title": "minWidth",
              "description": "Fixed minimum width of the card",
              "examples": [
                "100",
                "100px",
                "100%",
                "100rem"
              ],
              "default": "250px",
              "type": "string",
              "pattern": "^[0-9]+(px|rem|%)?$"
            },
            "color": {
              "$ref": "#/definitions/CardsColor"
            },
            "cards": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardConfigExternal"
              }
            }
          },
          "required": [
            "type",
            "color",
            "cards"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "mediaPosition": true,
            "minMediaHeight": true,
            "minWidth": true,
            "color": true,
            "cards": true
          },
          "required": [
            "id",
            "type",
            "color",
            "cards"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompCheckboxesExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponentFull"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompCheckboxesExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Checkboxes"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsOptionsSimple"
            },
            "layout": {
              "$ref": "#/definitions/LayoutStyle"
            },
            "showLabelsInTable": {
              "title": "Show label when single option in table",
              "description": "Boolean value indicating if the label should be visible when only one option exists in table",
              "default": false,
              "type": "boolean"
            },
            "alertOnChange": {
              "title": "Alert on change",
              "description": "Boolean value indicating if the component should alert on change",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "preselectedOptionIndex": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "layout": true,
            "showLabelsInTable": true,
            "alertOnChange": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompCustomButtonExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompCustomButtonExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "CustomButton"
            },
            "actions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomAction"
              }
            },
            "buttonStyle": {
              "$ref": "#/definitions/ButtonStyle"
            },
            "buttonColor": {
              "$ref": "#/definitions/ButtonColor"
            },
            "buttonSize": {
              "$ref": "#/definitions/ButtonSize"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title/text on the button",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "type",
            "actions"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "actions": true,
            "buttonStyle": true,
            "buttonColor": true,
            "buttonSize": true,
            "textResourceBindings": true
          },
          "required": [
            "id",
            "type",
            "actions"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompCustomExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompCustomExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Custom"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "Title (passed on as the \"text\" property to the component)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsForCustom"
            },
            "tagName": {
              "title": "Tag name",
              "description": "Web component tag name to use",
              "type": "string"
            }
          },
          "required": [
            "type",
            "tagName"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "tagName": true
          },
          "required": [
            "id",
            "type",
            "tagName"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompDatepickerExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompDatepickerExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Datepicker"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsSimple"
            },
            "minDate": {
              "title": "Earliest date",
              "description": "Sets the earliest allowed date. Can also use keyword 'today' to disable all past dates dynamically based on the current date. Defaults to 1900-01-01T12:00:00.000Z.",
              "default": "1900-01-01T12:00:00.000Z",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "const": "today"
                }
              ]
            },
            "maxDate": {
              "title": "Latest date",
              "description": "Sets the latest allowed date. Can also use keyword 'today' to disable all future dates dynamically based on the current date. Defaults to 2100-01-01T12:00:00.000Z.",
              "default": "2100-01-01T12:00:00.000Z",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "const": "today"
                }
              ]
            },
            "timeStamp": {
              "title": "Include time",
              "description": "Boolean value indicating if the date time should be stored as a timeStamp. Defaults to true. If true: 'YYYY-MM-DDThh:mm:ss.sssZ', if false 'YYYY-MM-DD';",
              "default": true,
              "type": "boolean"
            },
            "format": {
              "title": "Date format",
              "description": "Date format used when displaying the date to the user. The user date format from the locale will be prioritized over this setting.",
              "examples": [
                "DD/MM/YYYY",
                "MM/DD/YYYY",
                "YYYY-MM-DD"
              ],
              "default": "DD.MM.YYYY",
              "type": "string"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "minDate": true,
            "maxDate": true,
            "timeStamp": true,
            "format": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompDropdownExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponentFull"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompDropdownExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Dropdown"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "alertOnChange": {
              "title": "Alert on change",
              "description": "Boolean value indicating if the component should alert on change",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsOptionsSimple"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "preselectedOptionIndex": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "alertOnChange": true,
            "dataModelBindings": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompFileUploadExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompFileUploadExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "FileUpload"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IDataModelBindingsSimple"
                },
                {
                  "$ref": "#/definitions/IDataModelBindingsList"
                }
              ]
            },
            "maxFileSizeInMB": {
              "title": "Max file size (MB)",
              "description": "Sets the maximum file size allowed in megabytes",
              "type": "integer"
            },
            "maxNumberOfAttachments": {
              "title": "Max number of attachments",
              "description": "Sets the maximum number of attachments allowed to upload",
              "type": "integer"
            },
            "minNumberOfAttachments": {
              "title": "Min number of attachments",
              "description": "Sets the minimum number of attachments required to upload",
              "type": "integer"
            },
            "displayMode": {
              "enum": [
                "simple",
                "list"
              ]
            },
            "hasCustomFileEndings": {
              "title": "Has custom file endings",
              "description": "Boolean value indicating if the component has valid file endings",
              "default": false,
              "type": "boolean"
            },
            "validFileEndings": {
              "title": "Valid file endings",
              "description": "A separated string of valid file endings to upload. If not set all endings are accepted.",
              "examples": [
                ".csv",
                ".doc",
                ".docx",
                ".gif",
                ".jpeg",
                ".pdf",
                ".txt"
              ],
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "alertOnDelete": {
              "title": "Alert on delete",
              "description": "Boolean value indicating if warning popup should be displayed when attempting to delete an element",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            }
          },
          "required": [
            "type",
            "maxFileSizeInMB",
            "maxNumberOfAttachments",
            "minNumberOfAttachments",
            "displayMode"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "maxFileSizeInMB": true,
            "maxNumberOfAttachments": true,
            "minNumberOfAttachments": true,
            "displayMode": true,
            "hasCustomFileEndings": true,
            "validFileEndings": true,
            "alertOnDelete": true
          },
          "required": [
            "id",
            "type",
            "maxFileSizeInMB",
            "maxNumberOfAttachments",
            "minNumberOfAttachments",
            "displayMode"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompFileUploadWithTagExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponent"
        },
        {
          "title": "CompFileUploadWithTagExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "FileUploadWithTag"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tagTitle": {
                      "title": "Tag title",
                      "description": "The title to show when selecting a tag for each uploaded file",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true,
                    "tagTitle": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "anyOf": [
                {
                  "$ref": "#/definitions/IDataModelBindingsSimple"
                },
                {
                  "$ref": "#/definitions/IDataModelBindingsList"
                }
              ]
            },
            "maxFileSizeInMB": {
              "title": "Max file size (MB)",
              "description": "Sets the maximum file size allowed in megabytes",
              "type": "integer"
            },
            "maxNumberOfAttachments": {
              "title": "Max number of attachments",
              "description": "Sets the maximum number of attachments allowed to upload",
              "type": "integer"
            },
            "minNumberOfAttachments": {
              "title": "Min number of attachments",
              "description": "Sets the minimum number of attachments required to upload",
              "type": "integer"
            },
            "displayMode": {
              "enum": [
                "simple",
                "list"
              ]
            },
            "hasCustomFileEndings": {
              "title": "Has custom file endings",
              "description": "Boolean value indicating if the component has valid file endings",
              "default": false,
              "type": "boolean"
            },
            "validFileEndings": {
              "title": "Valid file endings",
              "description": "A separated string of valid file endings to upload. If not set all endings are accepted.",
              "examples": [
                ".csv",
                ".doc",
                ".docx",
                ".gif",
                ".jpeg",
                ".pdf",
                ".txt"
              ],
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "alertOnDelete": {
              "title": "Alert on delete",
              "description": "Boolean value indicating if warning popup should be displayed when attempting to delete an element",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            }
          },
          "required": [
            "type",
            "maxFileSizeInMB",
            "maxNumberOfAttachments",
            "minNumberOfAttachments",
            "displayMode"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "maxFileSizeInMB": true,
            "maxNumberOfAttachments": true,
            "minNumberOfAttachments": true,
            "displayMode": true,
            "hasCustomFileEndings": true,
            "validFileEndings": true,
            "alertOnDelete": true
          },
          "required": [
            "id",
            "type",
            "maxFileSizeInMB",
            "maxNumberOfAttachments",
            "minNumberOfAttachments",
            "displayMode"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompGridExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompGridExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Grid"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "rows": {
              "$ref": "#/definitions/GridRows"
            }
          },
          "required": [
            "type",
            "rows"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "rows": true
          },
          "required": [
            "id",
            "type",
            "rows"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompGroupExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompGroupExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Group"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "The title of the group (shown above the group)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "description": {
                      "title": "Description",
                      "description": "The description text shown underneath the title",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "groupingIndicator": {
              "title": "Set grouping indicator",
              "description": "Can visually group components together by indenting them or by putting them in a panel. ",
              "enum": [
                "indented",
                "panel"
              ]
            },
            "children": {
              "title": "Children",
              "description": "Array of component IDs that should be displayed in the group",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headingLevel": {
              "title": "Heading level",
              "description": "The heading level of the group title.",
              "enum": [
                2,
                3,
                4,
                5,
                6
              ]
            }
          },
          "required": [
            "type",
            "children"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "groupingIndicator": true,
            "children": true,
            "headingLevel": true
          },
          "required": [
            "id",
            "type",
            "children"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompHeaderExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompHeaderExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Header"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The text to display in the header",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "help": {
                  "title": "Help text",
                  "description": "The text to display in the help tooltip/popup",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "size": {
              "title": "Size",
              "description": "The size of the header",
              "enum": [
                "L",
                "M",
                "S",
                "h2",
                "h3",
                "h4"
              ]
            }
          },
          "required": [
            "type",
            "size"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "size": true
          },
          "required": [
            "id",
            "type",
            "size"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompIFrameExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompIFrameExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "IFrame"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title/text/content",
                  "description": "The content of the IFrame. Can for example be be set to a string containing HTML, a text resource key, or an expression looking up a value from the data model",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "sandbox": {
              "$ref": "#/definitions/ISandboxProperties"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "sandbox": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompImageExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompImageExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Image"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "altTextImg": {
                  "title": "Alt text",
                  "description": "Alternative text for the image (for screen readers).",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "help": {
                  "title": "Help text",
                  "description": "Help text for the image (shown in help text tooltip/popup)",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "image": {
              "$ref": "#/definitions/IImage"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "image": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompInputExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompInputExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Input"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "prefix": {
                      "title": "Prefix",
                      "description": "Prefix shown before the input field",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "suffix": {
                      "title": "Suffix",
                      "description": "Suffix shown after the input field",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true,
                    "prefix": true,
                    "suffix": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsSimple"
            },
            "saveWhileTyping": {
              "default": true,
              "$ref": "#/definitions/SaveWhileTyping"
            },
            "formatting": {
              "$ref": "#/definitions/IFormatting"
            },
            "variant": {
              "title": "Input variant",
              "description": "The variant of the input field (text or search).",
              "default": "text",
              "enum": [
                "text",
                "search"
              ]
            },
            "autocomplete": {
              "$ref": "#/definitions/HTMLAutoCompleteValues"
            },
            "maxLength": {
              "title": "Max length",
              "description": "Max length of the input field. Will add a counter to let the user know how many characters are left.",
              "type": "integer"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "saveWhileTyping": true,
            "formatting": true,
            "variant": true,
            "autocomplete": true,
            "maxLength": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompInstanceInformationExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompInstanceInformationExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "InstanceInformation"
            },
            "elements": {
              "title": "Elements",
              "description": "Which elements to show in the instance information",
              "type": "object",
              "properties": {
                "dateSent": {
                  "type": "boolean"
                },
                "sender": {
                  "type": "boolean"
                },
                "receiver": {
                  "type": "boolean"
                },
                "referenceNumber": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "textResourceBindings": {
              "$ref": "#/definitions/TRBLabel"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "labelSettings": true,
            "type": true,
            "elements": true,
            "textResourceBindings": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompInstantiationButtonExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompInstantiationButtonExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "InstantiationButton"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title/text to display on the button",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "mapping": {
              "$ref": "#/definitions/IMapping"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "mapping": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompLikertExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponent"
        },
        {
          "title": "CompLikertExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Likert"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "The title of the group",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "description": {
                      "title": "Description",
                      "description": "The description text for the Likert table.",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "leftColumnHeader": {
                      "title": "Left column header",
                      "description": "The header text for the left column in the Likert table",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "questions": {
                      "title": "Questions",
                      "description": "The questions to be displayed in each row (use a dynamic text resource)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "questionDescriptions": {
                      "title": "Question descriptions",
                      "description": "The descriptions to be displayed in each row (use a dynamic text resource)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "questionHelpTexts": {
                      "title": "Question help texts",
                      "description": "The help texts to be displayed in each row (use a dynamic text resource)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "leftColumnHeader": true,
                    "questions": true,
                    "questionDescriptions": true,
                    "questionHelpTexts": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsLikert"
            },
            "filter": {
              "$ref": "#/definitions/ILikertFilter"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "filter": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompLikertItemExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponentFull"
        },
        {
          "title": "CompLikertItemExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "LikertItem"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "Title of the Likert component/row",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "description": {
                      "title": "Description",
                      "description": "Description of the Likert component/row",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "help": {
                      "title": "Help",
                      "description": "Help text of the Likert component/row",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsOptionsSimple"
            },
            "showLabelsInTable": {
              "title": "Show label when single option in table",
              "description": "Boolean value indicating if the label should be visible when only one option exists in table",
              "default": false,
              "type": "boolean"
            },
            "layout": {
              "$ref": "#/definitions/LayoutStyle"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "preselectedOptionIndex": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "showLabelsInTable": true,
            "layout": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompLinkExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompLinkExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Link"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "target": {
                  "title": "Target",
                  "description": "The target of the link",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "title": {
                  "title": "Title",
                  "description": "The title/text of the link",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "download": {
                  "title": "Download",
                  "description": "Download target instead of navigating to it. Non-blank value is passed to the download attribute and becomes the filename of the downloaded file. Blank value means default filename is used.",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "style": {
              "$ref": "#/definitions/LinkStyle"
            },
            "openInNewTab": {
              "title": "Open in new tab",
              "description": "Open the link in a new tab",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "style"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "style": true,
            "openInNewTab": true
          },
          "required": [
            "id",
            "type",
            "style"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompListExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompListExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "List"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsForList"
            },
            "tableHeaders": {
              "title": "Table Headers",
              "description": "An object where the fields in the datalist is mapped to headers. Must correspond to datalist representing a row. Can be added to the resource files to change between languages.",
              "examples": [
                {
                  "productId": "product.id",
                  "description": "Beskrivelse av produkt"
                }
              ],
              "type": "object",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            },
            "sortableColumns": {
              "title": "Sortable columns",
              "description": "An array of column keys that can be sorted (note that your API backend needs to support this as well). The column has to be represented by the the header name that is written in tableHeaders.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pagination": {
              "$ref": "#/definitions/IPagination"
            },
            "dataListId": {
              "title": "Data list ID",
              "description": "The ID of the data list to use (must be implemented in your backend).",
              "type": "string"
            },
            "secure": {
              "title": "Secure",
              "description": "Boolean value indicating if the options should be instance aware. Defaults to false.",
              "default": false,
              "type": "boolean"
            },
            "mapping": {
              "description": "**Deprecated**: Will be removed in the next major version. Use `queryParameters` with expressions instead.",
              "deprecated": true,
              "$ref": "#/definitions/IMapping"
            },
            "queryParameters": {
              "$ref": "#/definitions/IQueryParameters"
            },
            "summaryBinding": {
              "title": "Data model binding to show in summary",
              "description": "Specify one of the keys in the `dataModelBindings` object to show in the summary component for the list.",
              "type": "string"
            },
            "bindingToShowInSummary": {
              "title": "Binding to show in summary",
              "description": "**Deprecated**: This property will be removed in the next major version, use `summaryBinding` instead.\nThe value of this binding will be shown in the summary component for the list. It expects a path in the datamodel. The binding must be one of the specified bindings under dataModelBindings.",
              "deprecated": true,
              "type": "string"
            },
            "tableHeadersMobile": {
              "title": "Table Headers Mobile",
              "description": "An array of strings representing the columns that is chosen to be shown in the mobile view.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "tableHeaders",
            "dataListId"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "tableHeaders": true,
            "sortableColumns": true,
            "pagination": true,
            "dataListId": true,
            "secure": true,
            "mapping": true,
            "queryParameters": true,
            "summaryBinding": true,
            "bindingToShowInSummary": true,
            "tableHeadersMobile": true
          },
          "required": [
            "id",
            "type",
            "tableHeaders",
            "dataListId"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompMapExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompMapExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Map"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsForMap"
            },
            "layers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MapLayer"
              }
            },
            "centerLocation": {
              "$ref": "#/definitions/Location"
            },
            "zoom": {
              "type": "number"
            },
            "geometryType": {
              "$ref": "#/definitions/IGeometryType"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "layers": true,
            "centerLocation": true,
            "zoom": true,
            "geometryType": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompMultipleSelectExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponentFull"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompMultipleSelectExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "MultipleSelect"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "alertOnChange": {
              "title": "Alert on change",
              "description": "Boolean value indicating if the component should alert on change",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsOptionsSimple"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "preselectedOptionIndex": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "alertOnChange": true,
            "dataModelBindings": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompNavigationBarExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompNavigationBarExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "NavigationBar"
            },
            "compact": {
              "title": "Compact",
              "description": "Change appearance of navbar as compact in desktop view",
              "type": "boolean"
            },
            "validateOnForward": {
              "$ref": "#/definitions/PageValidation"
            },
            "validateOnBackward": {
              "$ref": "#/definitions/PageValidation"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "compact": true,
            "validateOnForward": true,
            "validateOnBackward": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompNavigationButtonsExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompNavigationButtonsExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "NavigationButtons"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "back": {
                  "title": "Back",
                  "description": "Text on the back/previous page button",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "next": {
                  "title": "Next",
                  "description": "Text on the next page button",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "showBackButton": {
              "title": "Show back button",
              "description": "Shows two buttons (back/next) instead of just 'next'.",
              "default": false,
              "type": "boolean"
            },
            "validateOnNext": {
              "$ref": "#/definitions/PageValidation"
            },
            "validateOnPrevious": {
              "$ref": "#/definitions/PageValidation"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "showBackButton": true,
            "validateOnNext": true,
            "validateOnPrevious": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompNumberExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompNumberExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Number"
            },
            "textResourceBindings": {
              "$ref": "#/definitions/TRBLabel"
            },
            "formatting": {
              "$ref": "#/definitions/IFormatting"
            },
            "value": {
              "$ref": "expression.schema.v1.json#/definitions/number"
            },
            "direction": {
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ]
            },
            "icon": {
              "examples": [
                "https://example.com/icon.svg"
              ],
              "type": "string"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "formatting": true,
            "value": true,
            "direction": true,
            "icon": true
          },
          "required": [
            "id",
            "type",
            "value"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ComponentBase": {
      "title": "ComponentBase",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The component ID. Must be unique within all layouts/pages in a layout-set. Cannot end with <dash><number>.",
          "type": "string",
          "pattern": "^[0-9a-zA-Z][0-9a-zA-Z-]*(-?[a-zA-Z]+|[a-zA-Z][0-9]+|-[0-9]{6,})$"
        },
        "hidden": {
          "title": "Hidden",
          "description": "Boolean value or expression indicating if the component should be hidden. Defaults to false.",
          "default": false,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "grid": {
          "$ref": "#/definitions/IGrid"
        },
        "pageBreak": {
          "$ref": "#/definitions/IPageBreak"
        }
      },
      "required": [
        "id"
      ]
    },
    "CompPanelExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/IPanelBase"
        },
        {
          "title": "CompPanelExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Panel"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "Header/title of the panel",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "body": {
                  "title": "Body",
                  "description": "Body of the panel",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "variant": true,
            "showIcon": true,
            "type": true,
            "textResourceBindings": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompParagraphExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompParagraphExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Paragraph"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title of the paragraph",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "help": {
                  "title": "Help text",
                  "description": "Help text, optionally shown in a tooltip",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompPaymentDetailsExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompPaymentDetailsExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "PaymentDetails"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title of the paragraph",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "description": {
                  "title": "Description",
                  "description": "Description, optionally shown below the title",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "mapping": {
              "$ref": "#/definitions/IMapping"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "mapping": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompPaymentExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompPaymentExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Payment"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title of the paragraph",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                },
                "description": {
                  "title": "Description",
                  "description": "Description, optionally shown below the title",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompPrintButtonExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompPrintButtonExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "PrintButton"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "title": {
                  "title": "Title",
                  "description": "The title/text on the button",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompRadioButtonsExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/ISelectionComponentFull"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompRadioButtonsExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "RadioButtons"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsOptionsSimple"
            },
            "layout": {
              "$ref": "#/definitions/LayoutStyle"
            },
            "alertOnChange": {
              "title": "Alert on change",
              "description": "Boolean value indicating if the component should alert on change",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            "showLabelsInTable": {
              "title": "Show label when single option in table",
              "description": "Boolean value indicating if the label should be visible when only one option exists in table",
              "default": false,
              "type": "boolean"
            },
            "showAsCard": {
              "title": "Show as card",
              "description": "Boolean value indicating if the options should be displayed as cards. Defaults to false.",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "optionsId": true,
            "mapping": true,
            "queryParameters": true,
            "options": true,
            "secure": true,
            "sortOrder": true,
            "source": true,
            "preselectedOptionIndex": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "layout": true,
            "alertOnChange": true,
            "showLabelsInTable": true,
            "showAsCard": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompRepeatingGroupExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompRepeatingGroupExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "RepeatingGroup"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "The title of the group (shown above each instance in a Summary)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "description": {
                      "title": "Description",
                      "description": "The description text shown underneath the title",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "add_button_full": {
                      "title": "Add button (full) (for repeating groups)",
                      "description": "The text for the \"Add\" button (overrides \"add_button\", and sets the full text for the button)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "add_button": {
                      "title": "Add button (suffix) (for repeating groups)",
                      "description": "The text for the \"Add\" button (used as a suffix after the default button text)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "save_button": {
                      "title": "Save button (for repeating groups)",
                      "description": "The text for the \"Save\" button when the repeating group item is in edit mode",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "save_and_next_button": {
                      "title": "Save and next button (for repeating groups)",
                      "description": "The text for the \"Save and next\" button when the repeating group item is in edit mode (only displayed if edit.saveAndNextButton is true)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "edit_button_close": {
                      "title": "Edit button (close) (for repeating groups)",
                      "description": "The text for the \"Edit\" button when the repeating group item is in edit mode (i.e. the user can close the edit mode)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "edit_button_open": {
                      "title": "Edit button (open) (for repeating groups)",
                      "description": "The text for the \"Edit\" button when the repeating group item is not in edit mode (i.e. the user can open the edit mode)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "pagination_next_button": {
                      "title": "Next button in pagination",
                      "description": "The text for the \"Next\" button in pagination",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "pagination_back_button": {
                      "title": "Back button in pagination",
                      "description": "The text for the \"Back\" button in pagination",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "add_button_full": true,
                    "add_button": true,
                    "save_button": true,
                    "save_and_next_button": true,
                    "edit_button_close": true,
                    "edit_button_open": true,
                    "pagination_next_button": true,
                    "pagination_back_button": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "children": {
              "title": "Children",
              "description": "List of child component IDs to show inside (will be repeated according to the number of rows in the data model binding)",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rowsBefore": {
              "$ref": "#/definitions/GridRows"
            },
            "rowsAfter": {
              "$ref": "#/definitions/GridRows"
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsForGroup"
            },
            "showValidations": {
              "$ref": "#/definitions/AllowedValidationMasks"
            },
            "validateOnSaveRow": {
              "$ref": "#/definitions/AllowedValidationMasks"
            },
            "edit": {
              "$ref": "#/definitions/IGroupEditProperties"
            },
            "pagination": {
              "title": "Pagination options",
              "description": "Pagination options for the repeating group rows.",
              "type": "object",
              "properties": {
                "rowsPerPage": {
                  "type": "integer",
                  "minimum": 1
                }
              },
              "required": [
                "rowsPerPage"
              ],
              "additionalProperties": false
            },
            "maxCount": {
              "title": "Max number of rows",
              "description": "Maximum number of rows that can be added.",
              "type": "integer",
              "minimum": 2
            },
            "minCount": {
              "title": "Min number of rows",
              "description": "Minimum number of rows that should be added. If the user has not added enough rows, the repeating group will show a validation error",
              "type": "integer"
            },
            "tableHeaders": {
              "title": "Table headers",
              "description": "Array of component IDs that should be displayed as table headers. If not defined, all components referenced in the \"children\" property will be displayed as table headers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tableColumns": {
              "examples": [
                {
                  "childComponent1": {
                    "width": "auto"
                  }
                }
              ],
              "type": "object",
              "properties": {},
              "additionalProperties": {
                "$ref": "#/definitions/IGroupColumnFormatting"
              }
            },
            "hiddenRow": {
              "title": "Hidden row?",
              "description": "Expression or boolean indicating whether each row should be hidden. An expression will be evaluated per row, and if it evaluates to true, the row will be hidden. If set to true, all rows will be hidden.",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            "stickyHeader": {
              "title": "Sticky header",
              "description": "If set to true, the header of the repeating group will be sticky",
              "default": false,
              "type": "boolean"
            },
            "labelSettings": {
              "$ref": "#/definitions/ILabelSettings"
            }
          },
          "required": [
            "type",
            "children",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "children": true,
            "rowsBefore": true,
            "rowsAfter": true,
            "dataModelBindings": true,
            "showValidations": true,
            "validateOnSaveRow": true,
            "edit": true,
            "pagination": true,
            "maxCount": true,
            "minCount": true,
            "tableHeaders": true,
            "tableColumns": true,
            "hiddenRow": true,
            "stickyHeader": true,
            "labelSettings": true
          },
          "required": [
            "id",
            "type",
            "children",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompSubformExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompSubformExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Subform"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "title": "Title",
                      "description": "The title of the subform component",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "description": {
                      "title": "Description",
                      "description": "The description text shown underneath the title",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    },
                    "addButton": {
                      "title": "Add button (suffix)",
                      "description": "The text for the \"Add\" button (used as a suffix after the default button text)",
                      "$ref": "expression.schema.v1.json#/definitions/string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "addButton": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "layoutSet": {
              "title": "Layout set ID",
              "description": "The layout set to load for this subform",
              "type": "string"
            },
            "showAddButton": {
              "default": true,
              "type": "boolean"
            },
            "showDeleteButton": {
              "default": true,
              "type": "boolean"
            },
            "tableColumns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "headerContent": {
                    "title": "The column header value",
                    "description": "The header value to display. May contain a text resource bindings, but no data model lookups.",
                    "type": "string"
                  },
                  "cellContent": {
                    "type": "object",
                    "properties": {
                      "query": {
                        "title": "The cell value via data model lookup",
                        "description": "The cell value to display from a data model lookup (dot notation).",
                        "type": "string"
                      },
                      "default": {
                        "title": "The default cell value",
                        "description": "The cell value to display if `query` returns no result.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "query"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "headerContent",
                  "cellContent"
                ],
                "additionalProperties": false
              }
            },
            "summaryDelimiter": {
              "title": "The summary view cell delimiter",
              "description": "The value used to separate cells/elements in a summary view where rich layout is not available. Typically a comma, dash or similar.",
              "default": " — ",
              "type": "string"
            }
          },
          "required": [
            "type",
            "layoutSet",
            "tableColumns"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "layoutSet": true,
            "showAddButton": true,
            "showDeleteButton": true,
            "tableColumns": true,
            "summaryDelimiter": true
          },
          "required": [
            "id",
            "type",
            "layoutSet",
            "tableColumns"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompSummary2External": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompSummary2External",
          "type": "object",
          "properties": {
            "type": {
              "const": "Summary2"
            },
            "target": {
              "description": "Config for what should be rendered. If you set taskId, this property is optional.",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Mode",
                  "default": "component",
                  "enum": [
                    "page",
                    "layoutSet",
                    "component"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "taskId": {
                  "title": "Task ID",
                  "description": "Use this if you want to render something from another task.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "showPageInAccordion": {
              "type": "boolean"
            },
            "hideEmptyFields": {
              "description": "Set this to true if you don't want to show fields that have not been filled out.",
              "type": "boolean"
            },
            "overrides": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnySummaryOverrideProps"
              }
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "target": true,
            "showPageInAccordion": true,
            "hideEmptyFields": true,
            "overrides": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompSummaryExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompSummaryExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Summary"
            },
            "componentRef": {
              "title": "Component reference",
              "description": "String value indicating which layout component (by ID) the summary is for.",
              "type": "string"
            },
            "largeGroup": {
              "title": "Large group",
              "description": "Boolean value indicating if summary of repeating group should be displayed in large format. Useful for displaying summary with nested groups.",
              "default": false,
              "type": "boolean"
            },
            "excludedChildren": {
              "title": "Excluded child components",
              "description": "Array of component IDs that should not be shown in a repeating group's summary",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "returnToSummaryButtonTitle": {
                  "title": "ReturnToSummaryButtonTitle",
                  "description": "Used to specify the text on the NavigationButtons component that should be used after clicking \"Change\" on the summary component",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "display": {
              "$ref": "#/definitions/SummaryDisplayProperties"
            }
          },
          "required": [
            "type",
            "componentRef"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "componentRef": true,
            "largeGroup": true,
            "excludedChildren": true,
            "textResourceBindings": true,
            "display": true
          },
          "required": [
            "id",
            "type",
            "componentRef"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompTabsExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "title": "CompTabsExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Tabs"
            },
            "textResourceBindings": {
              "$ref": "#/definitions/TRBSummarizable"
            },
            "size": {
              "default": "medium",
              "enum": [
                "small",
                "medium",
                "large"
              ]
            },
            "defaultTab": {
              "type": "string"
            },
            "tabs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TabConfig"
              }
            }
          },
          "required": [
            "type",
            "tabs"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "type": true,
            "textResourceBindings": true,
            "size": true,
            "defaultTab": true,
            "tabs": true
          },
          "required": [
            "id",
            "type",
            "tabs"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompTextAreaExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "$ref": "#/definitions/FormComponentProps"
        },
        {
          "$ref": "#/definitions/SummarizableComponentProps"
        },
        {
          "$ref": "#/definitions/LabeledComponentProps"
        },
        {
          "title": "CompTextAreaExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "TextArea"
            },
            "textResourceBindings": {
              "allOf": [
                {
                  "$ref": "#/definitions/TRBFormComp"
                },
                {
                  "$ref": "#/definitions/TRBSummarizable"
                },
                {
                  "$ref": "#/definitions/TRBLabel"
                },
                {
                  "type": "object",
                  "properties": {
                    "tableTitle": true,
                    "shortName": true,
                    "requiredValidation": true,
                    "summaryTitle": true,
                    "summaryAccessibleTitle": true,
                    "title": true,
                    "description": true,
                    "help": true
                  },
                  "additionalProperties": false
                }
              ]
            },
            "dataModelBindings": {
              "$ref": "#/definitions/IDataModelBindingsSimple"
            },
            "saveWhileTyping": {
              "default": true,
              "$ref": "#/definitions/SaveWhileTyping"
            },
            "autocomplete": {
              "$ref": "#/definitions/HTMLAutoCompleteValues"
            },
            "maxLength": {
              "title": "Max length",
              "description": "Max length of the input field. Will add a counter to let the user know how many characters are left.",
              "type": "integer"
            }
          },
          "required": [
            "type",
            "dataModelBindings"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "readOnly": true,
            "required": true,
            "showValidations": true,
            "renderAsSummary": true,
            "forceShowInSummary": true,
            "labelSettings": true,
            "type": true,
            "textResourceBindings": true,
            "dataModelBindings": true,
            "saveWhileTyping": true,
            "autocomplete": true,
            "maxLength": true
          },
          "required": [
            "id",
            "type",
            "dataModelBindings"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompTextExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompTextExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Text"
            },
            "textResourceBindings": {
              "$ref": "#/definitions/TRBLabel"
            },
            "value": {
              "$ref": "expression.schema.v1.json#/definitions/string"
            },
            "direction": {
              "default": "horizontal",
              "enum": [
                "horizontal",
                "vertical"
              ]
            },
            "icon": {
              "examples": [
                "https://example.com/icon.svg"
              ],
              "type": "string"
            }
          },
          "required": [
            "type",
            "value"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "value": true,
            "direction": true,
            "icon": true
          },
          "required": [
            "id",
            "type",
            "value"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CompVideoExternal": {
      "allOf": [
        {
          "$ref": "#/definitions/ComponentBase"
        },
        {
          "title": "CompVideoExternal",
          "type": "object",
          "properties": {
            "type": {
              "const": "Video"
            },
            "textResourceBindings": {
              "type": "object",
              "properties": {
                "altText": {
                  "title": "Alt text",
                  "description": "Alternative text for the video (for screen readers).",
                  "$ref": "expression.schema.v1.json#/definitions/string"
                }
              },
              "additionalProperties": false
            },
            "video": {
              "$ref": "#/definitions/IVideo"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": true,
            "hidden": true,
            "grid": true,
            "pageBreak": true,
            "type": true,
            "textResourceBindings": true,
            "video": true
          },
          "required": [
            "id",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CustomAction": {
      "title": "CustomAction",
      "anyOf": [
        {
          "$ref": "#/definitions/ClientAction"
        },
        {
          "$ref": "#/definitions/ServerAction"
        }
      ]
    },
    "DatepickerSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "DropdownSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "FormComponentProps": {
      "title": "FormComponentProps",
      "type": "object",
      "properties": {
        "readOnly": {
          "title": "Read only/disabled?",
          "description": "Boolean value or expression indicating if the component should be read only/disabled. Defaults to false. <br /> <i>Please note that even with read-only fields in components, it may currently be possible to update the field by modifying the request sent to the API or through a direct API call.<i/>",
          "default": false,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "required": {
          "title": "Required?",
          "description": "Boolean value or expression indicating if the component should be required. Defaults to false.",
          "default": false,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "showValidations": {
          "$ref": "#/definitions/AllowedValidationMasks"
        }
      }
    },
    "GridCell": {
      "title": "GridCell",
      "anyOf": [
        {
          "$ref": "#/definitions/GridComponentRef"
        },
        {
          "const": null
        },
        {
          "$ref": "#/definitions/GridCellText"
        },
        {
          "$ref": "#/definitions/GridCellLabelFrom"
        }
      ]
    },
    "GridCellLabelFrom": {
      "allOf": [
        {
          "$ref": "#/definitions/ITableColumnProperties"
        },
        {
          "title": "GridCellLabelFrom",
          "type": "object",
          "properties": {
            "labelFrom": {
              "title": "Fetch label from other component",
              "description": "Set this to a component id to display the label from that component",
              "type": "string"
            },
            "columnOptions": {
              "$ref": "#/definitions/ITableColumnProperties"
            }
          },
          "required": [
            "labelFrom"
          ]
        },
        {
          "type": "object",
          "properties": {
            "width": true,
            "alignText": true,
            "textOverflow": true,
            "labelFrom": true,
            "columnOptions": true
          },
          "required": [
            "labelFrom"
          ],
          "additionalProperties": false
        }
      ]
    },
    "GridCellText": {
      "allOf": [
        {
          "$ref": "#/definitions/ITableColumnProperties"
        },
        {
          "title": "GridCellText",
          "type": "object",
          "properties": {
            "text": {
              "title": "Text",
              "description": "Text to display (can also be a key in text resources)",
              "type": "string"
            },
            "help": {
              "title": "Help",
              "description": "Help text to display",
              "type": "string"
            },
            "columnOptions": {
              "$ref": "#/definitions/ITableColumnProperties"
            }
          },
          "required": [
            "text"
          ]
        },
        {
          "type": "object",
          "properties": {
            "width": true,
            "alignText": true,
            "textOverflow": true,
            "text": true,
            "help": true,
            "columnOptions": true
          },
          "required": [
            "text"
          ],
          "additionalProperties": false
        }
      ]
    },
    "GridComponentRef": {
      "allOf": [
        {
          "$ref": "#/definitions/ITableColumnProperties"
        },
        {
          "title": "GridComponentRef",
          "type": "object",
          "properties": {
            "component": {
              "title": "Component ID",
              "description": "ID of the component",
              "type": "string"
            },
            "columnOptions": {
              "$ref": "#/definitions/ITableColumnProperties"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "width": true,
            "alignText": true,
            "textOverflow": true,
            "component": true,
            "columnOptions": true
          },
          "additionalProperties": false
        }
      ]
    },
    "GridJustification": {
      "title": "Justification/alignment",
      "description": "Justification/alignment of the image",
      "enum": [
        "flex-start",
        "center",
        "flex-end",
        "space-between",
        "space-around",
        "space-evenly"
      ]
    },
    "GridRow": {
      "title": "GridRow",
      "type": "object",
      "properties": {
        "header": {
          "title": "Is header row?",
          "default": false,
          "type": "boolean"
        },
        "readOnly": {
          "title": "Is row read-only?",
          "default": false,
          "type": "boolean"
        },
        "columnOptions": {
          "$ref": "#/definitions/ITableColumnProperties"
        },
        "cells": {
          "title": "Cells in table row",
          "description": "The list of cells in this row",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GridCell"
          }
        }
      },
      "required": [
        "cells"
      ],
      "additionalProperties": false
    },
    "GridRows": {
      "title": "Rows in Grid or Grid-like component",
      "description": "The list of rows in this grid",
      "examples": [
        [
          {
            "header": false,
            "readOnly": false,
            "cells": [
              {
                "text": "hello.world"
              },
              {
                "component": "myOtherComponent"
              }
            ]
          }
        ]
      ],
      "type": "array",
      "items": {
        "$ref": "#/definitions/GridRow"
      }
    },
    "GroupSummaryOverrideProps": {
      "allOf": [
        {
          "$ref": "#/definitions/ISummaryOverridesCommon"
        },
        {
          "title": "Summary properties",
          "description": "Properties for how to display the summary of the component",
          "type": "object",
          "properties": {
            "isCompact": {
              "title": "Compact summary",
              "description": "Boolean value indicating if the summary should be compact",
              "type": "boolean"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "componentId": true,
            "hidden": true,
            "forceShow": true,
            "emptyFieldText": true,
            "isCompact": true
          },
          "required": [
            "componentId"
          ],
          "additionalProperties": false
        }
      ]
    },
    "HeadingLevel": {
      "title": "HeadingLevel",
      "enum": [
        2,
        3,
        4,
        5,
        6
      ]
    },
    "HTMLAutoCompleteValues": {
      "title": "HTML autocomplete values",
      "description": "Autocomplete hints to the browser. See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete",
      "enum": [
        "on",
        "off",
        "name",
        "honorific-prefix",
        "given-name",
        "additional-name",
        "family-name",
        "honorific-suffix",
        "nickname",
        "email",
        "username",
        "new-password",
        "current-password",
        "one-time-code",
        "organization-title",
        "organization",
        "street-address",
        "address-line1",
        "address-line2",
        "address-line3",
        "address-level4",
        "address-level3",
        "address-level2",
        "address-level1",
        "country",
        "country-name",
        "postal-code",
        "cc-name",
        "cc-given-name",
        "cc-additional-name",
        "cc-family-name",
        "cc-number",
        "cc-exp",
        "cc-exp-month",
        "cc-exp-year",
        "cc-csc",
        "cc-type",
        "transaction-currency",
        "transaction-amount",
        "language",
        "bday",
        "bday-day",
        "bday-month",
        "bday-year",
        "sex",
        "tel",
        "tel-country-code",
        "tel-national",
        "tel-area-code",
        "tel-local",
        "tel-extension",
        "impp",
        "url",
        "photo"
      ]
    },
    "IAudio": {
      "title": "IAudio",
      "type": "object",
      "properties": {
        "src": {
          "$ref": "#/definitions/AudioSrc"
        }
      },
      "required": [
        "src"
      ],
      "additionalProperties": false
    },
    "IDataModelBindingsForAddress": {
      "title": "IDataModelBindingsForAddress",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "zipCode": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "postPlace": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "careOf": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "houseNumber": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "required": [
        "address",
        "zipCode",
        "postPlace"
      ],
      "additionalProperties": false
    },
    "IDataModelBindingsForCustom": {
      "title": "IDataModelBindingsForCustom",
      "type": "object",
      "properties": {},
      "additionalProperties": {
        "$ref": "#/definitions/IRawDataModelBinding"
      }
    },
    "IDataModelBindingsForGroup": {
      "title": "IDataModelBindingsForGroup",
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "required": [
        "group"
      ],
      "additionalProperties": false
    },
    "IDataModelBindingsForList": {
      "title": "IDataModelBindingsForList",
      "type": "object",
      "properties": {},
      "additionalProperties": {
        "$ref": "#/definitions/IRawDataModelBinding"
      }
    },
    "IDataModelBindingsForMap": {
      "title": "IDataModelBindingsForMap",
      "type": "object",
      "properties": {
        "simpleBinding": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "geometries": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "additionalProperties": false
    },
    "IDataModelBindingsLikert": {
      "title": "IDataModelBindingsLikert",
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "questions": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "required": [
        "answer",
        "questions"
      ],
      "additionalProperties": false
    },
    "IDataModelBindingsList": {
      "title": "IDataModelBindingsList",
      "type": "object",
      "properties": {
        "list": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "required": [
        "list"
      ],
      "additionalProperties": false
    },
    "IDataModelBindingsOptionsSimple": {
      "title": "IDataModelBindingsOptionsSimple",
      "type": "object",
      "properties": {
        "simpleBinding": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "label": {
          "$ref": "#/definitions/IRawDataModelBinding"
        },
        "metadata": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "required": [
        "simpleBinding"
      ],
      "additionalProperties": false
    },
    "IDataModelBindingsSimple": {
      "title": "IDataModelBindingsSimple",
      "type": "object",
      "properties": {
        "simpleBinding": {
          "$ref": "#/definitions/IRawDataModelBinding"
        }
      },
      "required": [
        "simpleBinding"
      ],
      "additionalProperties": false
    },
    "IDataModelReference": {
      "title": "IDataModelReference",
      "type": "object",
      "properties": {
        "dataType": {
          "title": "Data type",
          "description": "The name of the datamodel type to reference",
          "type": "string"
        },
        "field": {
          "title": "Field",
          "description": "The path to the property using dot-notation",
          "type": "string"
        }
      },
      "required": [
        "dataType",
        "field"
      ],
      "additionalProperties": false
    },
    "IFormatting": {
      "title": "IFormatting",
      "examples": [
        {
          "currency": "NOK"
        },
        {
          "number": {
            "thousandSeparator": " ",
            "decimalSeparator": ",",
            "allowNegative": false,
            "suffix": " kr"
          }
        }
      ],
      "type": "object",
      "properties": {
        "currency": {
          "title": "Language-sensitive currency formatting",
          "description": "Enables currency to be language sensitive based on selected app language. Note: parts that already exist in number property are not overridden by this prop.",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYN",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRU",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLE",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STN",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "UYI",
            "UYU",
            "UYW",
            "UZS",
            "VED",
            "VES",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XCD",
            "XDR",
            "XOF",
            "XPF",
            "XSU",
            "XUA",
            "YER",
            "ZAR",
            "ZMW",
            "ZWL"
          ]
        },
        "unit": {
          "title": "Language-sensitive number formatting based on unit",
          "description": "Enables unit along with thousand and decimal separators to be language sensitive based on selected app language. They are configured in number property. Note: parts that already exist in number property are not overridden by this prop.",
          "enum": [
            "celsius",
            "centimeter",
            "day",
            "degree",
            "foot",
            "gram",
            "hectare",
            "hour",
            "inch",
            "kilogram",
            "kilometer",
            "liter",
            "meter",
            "milliliter",
            "millimeter",
            "millisecond",
            "minute",
            "month",
            "percent",
            "second",
            "week",
            "year"
          ]
        },
        "position": {
          "title": "Position of the currency/unit symbol",
          "description": "Display the unit as prefix or suffix. Default is prefix. (Use only when using currency or unit options)",
          "enum": [
            "prefix",
            "suffix"
          ]
        },
        "number": {
          "anyOf": [
            {
              "$ref": "#/definitions/PatternFormatProps"
            },
            {
              "$ref": "#/definitions/NumberFormatProps"
            }
          ]
        },
        "align": {
          "default": "left",
          "enum": [
            "right",
            "center",
            "left"
          ]
        }
      },
      "additionalProperties": false
    },
    "IGeometryType": {
      "title": "IGeometryType",
      "default": "GeoJSON",
      "enum": [
        "GeoJSON",
        "WKT"
      ]
    },
    "IGrid": {
      "allOf": [
        {
          "$ref": "#/definitions/IGridStyling"
        },
        {
          "title": "Grid",
          "description": "Settings for the components grid. Used for controlling horizontal alignment",
          "type": "object",
          "properties": {
            "labelGrid": {
              "$ref": "#/definitions/IGridStyling"
            },
            "innerGrid": {
              "$ref": "#/definitions/IGridStyling"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "xs": true,
            "sm": true,
            "md": true,
            "lg": true,
            "xl": true,
            "labelGrid": true,
            "innerGrid": true
          },
          "additionalProperties": false
        }
      ]
    },
    "IGridSize": {
      "title": "IGridSize",
      "anyOf": [
        {
          "const": "auto"
        },
        {
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ]
        }
      ]
    },
    "IGridStyling": {
      "title": "IGridStyling",
      "type": "object",
      "properties": {
        "xs": {
          "default": "auto",
          "$ref": "#/definitions/IGridSize"
        },
        "sm": {
          "default": "auto",
          "$ref": "#/definitions/IGridSize"
        },
        "md": {
          "default": "auto",
          "$ref": "#/definitions/IGridSize"
        },
        "lg": {
          "default": "auto",
          "$ref": "#/definitions/IGridSize"
        },
        "xl": {
          "default": "auto",
          "$ref": "#/definitions/IGridSize"
        }
      }
    },
    "IGroupColumnFormatting": {
      "allOf": [
        {
          "$ref": "#/definitions/ITableColumnProperties"
        },
        {
          "title": "IGroupColumnFormatting",
          "type": "object",
          "properties": {
            "editInTable": {
              "title": "Edit in table",
              "description": "If set to true, the component will be editable directly in the table view. ",
              "default": false,
              "type": "boolean"
            },
            "showInExpandedEdit": {
              "title": "Show in expanded edit",
              "description": "If set to true, the component will be shown in the expanded edit view. This is also the default behaviour, but can be turned off for components that are only to be edited in the table view.",
              "default": true,
              "type": "boolean"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "width": true,
            "alignText": true,
            "textOverflow": true,
            "editInTable": true,
            "showInExpandedEdit": true
          },
          "additionalProperties": false
        }
      ]
    },
    "IGroupEditProperties": {
      "title": "IGroupEditProperties",
      "type": "object",
      "properties": {
        "mode": {
          "title": "Mode",
          "description": "The mode of the repeating group",
          "default": "showTable",
          "enum": [
            "hideTable",
            "showTable",
            "showAll",
            "onlyTable"
          ]
        },
        "addButton": {
          "title": "Add button",
          "description": "Expression or boolean indicating whether to show the \"Add\" button",
          "default": true,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "saveButton": {
          "title": "Save button",
          "description": "Expression or boolean indicating whether to show the \"Save\" button",
          "default": true,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "deleteButton": {
          "title": "Delete button",
          "description": "Expression or boolean indicating whether to show the \"Delete\" button",
          "default": true,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "editButton": {
          "title": "Edit button",
          "description": "Expression or boolean indicating whether to show the \"Edit\" button",
          "default": true,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "multiPage": {
          "title": "Multi page functionality",
          "description": "Turning this on makes it possible to display the edit mode for a repeating group with multiple inner pages. Every component referenced in the \"children\" property should have a prefix with the page number it should be displayed on (e.g. \"1:component1\", \"2:component2\", etc.)",
          "default": false,
          "type": "boolean"
        },
        "openByDefault": {
          "title": "Open by default",
          "description": "If set to true, a row of the repeating group will be opened by default, if the group has no rows already. If set to \"first\" or \"last\", the first or last row will be opened by default",
          "default": false,
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "const": "first"
            },
            {
              "const": "last"
            }
          ]
        },
        "alertOnDelete": {
          "title": "Alert on delete",
          "description": "Expression or boolean indicating whether to show an alert when the user clicks the \"Delete\" button, prompting them to confirm the deletion",
          "default": false,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "saveAndNextButton": {
          "title": "Save and next button",
          "description": "Expression or boolean indicating whether to show the \"Save and next\" button when editing a repeating group row. This button will save the current row and open the next row for editing.",
          "default": false,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        },
        "alwaysShowAddButton": {
          "title": "Always show add button",
          "description": "If set to true, the \"Add\" button will always be shown, even if the user is currently editing another row",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "IImage": {
      "title": "IImage",
      "type": "object",
      "properties": {
        "src": {
          "$ref": "#/definitions/IImageSrc"
        },
        "width": {
          "title": "Image width",
          "examples": [
            "100%"
          ],
          "type": "string"
        },
        "align": {
          "$ref": "#/definitions/GridJustification"
        }
      },
      "required": [
        "src",
        "width",
        "align"
      ],
      "additionalProperties": false
    },
    "IImageSrc": {
      "title": "IImageSrc",
      "examples": [
        {
          "nb": "https://example.com/bilde.png",
          "nn": "https://example.com/bilete.png",
          "en": "https://example.com/image.png"
        }
      ],
      "type": "object",
      "properties": {
        "nb": {
          "title": "Image source (when using norwegian bokmål language)",
          "type": "string"
        },
        "nn": {
          "title": "Image source (when using norwegian nynorsk language)",
          "type": "string"
        },
        "en": {
          "title": "Image source (when using english language)",
          "type": "string"
        }
      },
      "additionalProperties": {
        "title": "Image source (when using other languages)",
        "type": "string"
      }
    },
    "ILabelSettings": {
      "title": "ILabelSettings",
      "type": "object",
      "properties": {
        "optionalIndicator": {
          "title": "Optional indicator",
          "description": "Show optional indicator on label",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ILayoutFile": {
      "title": "Altinn layout",
      "description": "Schema that describes the layout configuration for Altinn applications.",
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "layout": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnyComponent"
              }
            },
            "hidden": {
              "title": "Hidden",
              "description": "Expression that will hide the page/form layout if true",
              "default": false,
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            "expandedWidth": {
              "title": "Expanded width",
              "description": "Sets expanded width for pages",
              "default": false,
              "type": "boolean"
            }
          },
          "required": [
            "layout"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "data"
      ],
      "additionalProperties": false
    },
    "ILikertFilter": {
      "title": "Filter",
      "description": "Optionally filter specific rows within the likert group using start/stop indexes for displaying the desired ones(beware that start index starts at zero, and stop index starts at one, so {start, stop} = {0, 3} will display 3 rows, not 4)",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "enum": [
              "start",
              "stop"
            ]
          },
          "value": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d+$"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "key",
          "value"
        ],
        "additionalProperties": false
      }
    },
    "IMapping": {
      "title": "Mapping",
      "description": "A mapping of key-value pairs (usually used for mapping a path in the data model to a query string parameter).",
      "type": "object",
      "properties": {},
      "additionalProperties": {
        "type": "string"
      }
    },
    "InputSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "IOptionSource": {
      "title": "Option source",
      "description": "Allows for fetching options from the data model, pointing to a repeating group structure",
      "type": "object",
      "properties": {
        "dataType": {
          "title": "Data type",
          "description": "The datamodel where the repeating group data is stored. If not specified, the data model defined in the layout-set will be used.",
          "type": "string"
        },
        "group": {
          "title": "Group",
          "description": "The repeating group to base options on.",
          "examples": [
            "model.some.group"
          ],
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "A label of the option displayed in Radio- and Checkbox groups. Can be plain text, a text resource binding, or a dynamic expression.",
          "examples": [
            "some.text.key"
          ],
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "value": {
          "title": "Value",
          "description": "Field in the group that should be used as value",
          "examples": [
            "model.some.group[{0}].someField"
          ],
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "A description of the option displayed in Radio- and Checkbox groups. Can be plain text, a text resource binding, or a dynamic expression.",
          "examples": [
            "some.text.key",
            "My Description"
          ],
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "helpText": {
          "title": "Help Text",
          "description": "A help text for the option displayed in Radio- and Checkbox groups. Can be plain text, a text resource binding, or a dynamic expression.",
          "examples": [
            "some.text.key",
            "My Help Text"
          ],
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      },
      "required": [
        "group",
        "label",
        "value"
      ],
      "additionalProperties": false
    },
    "IPageBreak": {
      "title": "Page break",
      "description": "Optionally insert page-break before/after component when rendered in PDF",
      "type": "object",
      "properties": {
        "breakBefore": {
          "title": "Page break before",
          "description": "PDF only: Value or expression indicating whether a page break should be added before the component. Can be either: 'auto' (default), 'always', or 'avoid'.",
          "examples": [
            "auto",
            "always",
            "avoid"
          ],
          "default": "auto",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "breakAfter": {
          "title": "Page break after",
          "description": "PDF only: Value or expression indicating whether a page break should be added after the component. Can be either: 'auto' (default), 'always', or 'avoid'.",
          "examples": [
            "auto",
            "always",
            "avoid"
          ],
          "default": "auto",
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "IPagination": {
      "title": "Pagination",
      "description": "Pagination settings. Set this to enable pagination (must be supported by backend).",
      "type": "object",
      "properties": {
        "alternatives": {
          "title": "Alternatives",
          "description": "List of page sizes the user can choose from. Make sure to test the performance of the largest number of items per page you are allowing.",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "default": {
          "title": "Default",
          "description": "The pagination size that is set to default.",
          "type": "number"
        }
      },
      "required": [
        "alternatives",
        "default"
      ],
      "additionalProperties": false
    },
    "IPanelBase": {
      "title": "IPanelBase",
      "type": "object",
      "properties": {
        "variant": {
          "title": "Panel variant",
          "description": "Change the look of the panel",
          "enum": [
            "info",
            "warning",
            "error",
            "success"
          ]
        },
        "showIcon": {
          "title": "Show icon",
          "description": "Show icon in the panel header",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "IQueryParameters": {
      "title": "Query parameters",
      "description": "A mapping of query string parameters to values. Will be appended to the URL when fetching options.",
      "type": "object",
      "properties": {},
      "additionalProperties": {
        "$ref": "expression.schema.v1.json#/definitions/string"
      }
    },
    "IRawDataModelBinding": {
      "title": "IRawDataModelBinding",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/IDataModelReference"
        }
      ]
    },
    "IRawOption": {
      "title": "IRawOption",
      "examples": [
        {
          "label": "",
          "value": ""
        }
      ],
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "const": null
            }
          ]
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "type": "string"
        }
      },
      "required": [
        "label",
        "value"
      ],
      "additionalProperties": false
    },
    "ISandboxProperties": {
      "title": "ISandboxProperties",
      "type": "object",
      "properties": {
        "allowPopups": {
          "title": "Allow popups",
          "description": "Sets \"allow-popups\" in the sandbox attribute on the iframe. See: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox",
          "default": false,
          "type": "boolean"
        },
        "allowPopupsToEscapeSandbox": {
          "title": "Allow popups to escape sandbox",
          "description": "Sets \"allow-popups-to-escape-sandbox\" in the sandbox attribute on the iframe. See: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ISelectionComponent": {
      "title": "ISelectionComponent",
      "type": "object",
      "properties": {
        "optionsId": {
          "title": "Dynamic options (fetched from server)",
          "description": "ID of the option list to fetch from the server",
          "type": "string"
        },
        "mapping": {
          "description": "**Deprecated**: Will be removed in the next major version. Use `queryParameters` with expressions instead.",
          "deprecated": true,
          "$ref": "#/definitions/IMapping"
        },
        "queryParameters": {
          "$ref": "#/definitions/IQueryParameters"
        },
        "options": {
          "title": "Static options",
          "description": "List of static options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IRawOption"
          }
        },
        "secure": {
          "title": "Secure options (when using optionsId)",
          "description": "Whether to call the secure API endpoint when fetching options from the server (allows for user/instance-specific options)",
          "default": false,
          "type": "boolean"
        },
        "sortOrder": {
          "description": "Sorts the code list in either ascending or descending order by label.",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "source": {
          "$ref": "#/definitions/IOptionSource"
        }
      }
    },
    "ISelectionComponentFull": {
      "allOf": [
        {
          "$ref": "#/definitions/ISelectionComponent"
        },
        {
          "title": "ISelectionComponentFull",
          "type": "object",
          "properties": {
            "preselectedOptionIndex": {
              "title": "Preselected option index",
              "description": "Index of the option to preselect (if no option has been selected yet)",
              "type": "integer"
            }
          }
        }
      ]
    },
    "ISummaryOverridesCommon": {
      "title": "ISummaryOverridesCommon",
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "forceShow": {
          "type": "boolean"
        },
        "emptyFieldText": {
          "type": "string"
        }
      },
      "required": [
        "componentId"
      ]
    },
    "ITableColumnProperties": {
      "title": "Column options",
      "description": "Options for the row/column",
      "examples": [
        {
          "width": "auto",
          "alignText": "left",
          "textOverflow": {
            "lineWrap": true,
            "maxHeight": 2
          }
        }
      ],
      "type": "object",
      "properties": {
        "width": {
          "title": "Width",
          "description": "Width of cell in % or 'auto'. Defaults to 'auto'",
          "default": "auto",
          "type": "string",
          "pattern": "^([0-9]{1,2}%|100%|auto)$"
        },
        "alignText": {
          "$ref": "#/definitions/ITableColumnsAlignText"
        },
        "textOverflow": {
          "$ref": "#/definitions/ITableColumnsTextOverflow"
        }
      }
    },
    "ITableColumnsAlignText": {
      "title": "Align Text",
      "description": "Choose text alignment between 'left', 'center', or 'right' for text in table cells. Defaults to 'left' for text and 'right' for numbers.",
      "enum": [
        "left",
        "center",
        "right"
      ]
    },
    "ITableColumnsTextOverflow": {
      "title": "ITableColumnsTextOverflow",
      "type": "object",
      "properties": {
        "lineWrap": {
          "title": "Line Wrap",
          "description": "Toggle line wrapping on or off. Defaults to true",
          "default": true,
          "type": "boolean"
        },
        "maxHeight": {
          "title": "Max Height",
          "description": "Determines the number of lines to display in table cell before hiding the rest of the text with an ellipsis (...). Defaults to 2.",
          "default": 2,
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "IVideo": {
      "title": "IVideo",
      "type": "object",
      "properties": {
        "src": {
          "$ref": "#/definitions/VideoSrc"
        }
      },
      "required": [
        "src"
      ],
      "additionalProperties": false
    },
    "LabeledComponentProps": {
      "title": "LabeledComponentProps",
      "type": "object",
      "properties": {
        "labelSettings": {
          "$ref": "#/definitions/ILabelSettings"
        }
      }
    },
    "LayoutStyle": {
      "title": "Layout",
      "description": "Define the layout style for the options",
      "enum": [
        "column",
        "row",
        "table"
      ]
    },
    "LinkStyle": {
      "title": "Style",
      "description": "The style of the link (a primary/secondary button, or an actual link)",
      "enum": [
        "primary",
        "secondary",
        "link"
      ]
    },
    "ListSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "Location": {
      "title": "Center location",
      "description": "Center location of the map",
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "additionalProperties": false
    },
    "MapLayer": {
      "title": "MapLayer",
      "type": "object",
      "properties": {
        "url": {
          "title": "Map layer url",
          "description": "Url to a map tile. {z}/{x}/{y} will be replaced with tile coordinates, {s} will be replaced with a random subdomain if subdomains are given",
          "type": "string"
        },
        "attribution": {
          "title": "Attribution",
          "description": "Ascribing a work or remark to a particular unit for recognition",
          "type": "string"
        },
        "subdomains": {
          "title": "Subdomains",
          "description": "List of subdomains. Used for balancing the load on different map tiling servers. A random one will replace {s} in the defined url.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "url"
      ],
      "additionalProperties": false
    },
    "MultipleSelectSummaryOverrideProps": {
      "allOf": [
        {
          "$ref": "#/definitions/ISummaryOverridesCommon"
        },
        {
          "title": "Summary properties",
          "description": "Properties for how to display the summary of the component",
          "type": "object",
          "properties": {
            "displayType": {
              "title": "Display type",
              "description": "How data should be displayed for the radio in the summary",
              "enum": [
                "list",
                "string"
              ]
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "componentId": true,
            "hidden": true,
            "forceShow": true,
            "emptyFieldText": true,
            "displayType": true
          },
          "required": [
            "componentId"
          ],
          "additionalProperties": false
        }
      ]
    },
    "NavigateToPageAction": {
      "title": "NavigateToPageAction",
      "type": "object",
      "properties": {
        "id": {
          "const": "navigateToPage"
        },
        "type": {
          "const": "ClientAction"
        },
        "validation": {
          "$ref": "#/definitions/PageValidation"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "page": {
              "type": "string"
            }
          },
          "required": [
            "page"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "id",
        "type",
        "metadata"
      ],
      "additionalProperties": false
    },
    "NextPageAction": {
      "title": "NextPageAction",
      "type": "object",
      "properties": {
        "id": {
          "const": "nextPage"
        },
        "type": {
          "const": "ClientAction"
        },
        "validation": {
          "$ref": "#/definitions/PageValidation"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "additionalProperties": false
    },
    "NumberFormatProps": {
      "title": "Number formatting options",
      "description": "These options are sent directly to react-number-format in order to make it possible to format pretty numbers in the input field.",
      "type": "object",
      "properties": {
        "thousandSeparator": {
          "anyOf": [
            {
              "$ref": "expression.schema.v1.json#/definitions/boolean"
            },
            {
              "$ref": "expression.schema.v1.json#/definitions/string"
            }
          ]
        },
        "decimalSeparator": {
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "allowedDecimalSeparators": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "thousandsGroupStyle": {
          "enum": [
            "thousand",
            "lakh",
            "wan",
            "none"
          ]
        },
        "decimalScale": {
          "type": "number"
        },
        "fixedDecimalScale": {
          "type": "boolean"
        },
        "allowNegative": {
          "type": "boolean"
        },
        "allowLeadingZeros": {
          "type": "boolean"
        },
        "suffix": {
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "prefix": {
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "PageValidation": {
      "title": "PageValidation",
      "type": "object",
      "properties": {
        "page": {
          "title": "Page",
          "description": "Which pages should be validated when the next button is clicked.",
          "enum": [
            "current",
            "currentAndPrevious",
            "all"
          ]
        },
        "show": {
          "$ref": "#/definitions/AllowedValidationMasks"
        }
      },
      "required": [
        "page",
        "show"
      ],
      "additionalProperties": false
    },
    "PatternFormatProps": {
      "title": "PatternFormatProps",
      "type": "object",
      "properties": {
        "format": {
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "mask": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "allowEmptyFormatting": {
          "type": "boolean"
        },
        "patternChar": {
          "type": "string"
        }
      },
      "required": [
        "format"
      ],
      "additionalProperties": false
    },
    "PreviousPageAction": {
      "title": "PreviousPageAction",
      "type": "object",
      "properties": {
        "id": {
          "const": "previousPage"
        },
        "type": {
          "const": "ClientAction"
        },
        "validation": {
          "$ref": "#/definitions/PageValidation"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "additionalProperties": false
    },
    "RadioSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "RepeatingGroupSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "SaveWhileTyping": {
      "title": "Automatic saving while typing",
      "description": "Lets you control how long we wait before saving the value locally while typing. This value is usually also used to determine how long we wait before saving the value to the server. The default value is 400 milliseconds.",
      "default": 400,
      "type": "number"
    },
    "ServerAction": {
      "title": "ServerAction",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "const": "ServerAction"
        },
        "validation": {
          "$ref": "#/definitions/PageValidation"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "additionalProperties": false
    },
    "SubformAction": {
      "title": "SubformAction",
      "anyOf": [
        {
          "$ref": "#/definitions/CloseSubformAction"
        },
        {
          "$ref": "#/definitions/ValidateSubformAction"
        }
      ]
    },
    "SummarizableComponentProps": {
      "title": "SummarizableComponentProps",
      "type": "object",
      "properties": {
        "renderAsSummary": {
          "title": "Render as summary",
          "description": "Boolean value indicating if the component should be rendered as a summary. Defaults to false.",
          "default": false,
          "type": "boolean"
        },
        "forceShowInSummary": {
          "title": "Force show in summary",
          "description": "Will force show the component in a summary even if hideEmptyFields is set to true in the summary component.",
          "default": false,
          "$ref": "expression.schema.v1.json#/definitions/boolean"
        }
      }
    },
    "SummaryDisplayProperties": {
      "title": "Display properties",
      "description": "Optional properties to configure how summary is displayed",
      "type": "object",
      "properties": {
        "hideChangeButton": {
          "title": "Hide change button",
          "description": "Set to true if the change button should be hidden for the summary component. False by default.",
          "default": false,
          "type": "boolean"
        },
        "hideValidationMessages": {
          "title": "Hide validation messages",
          "description": "Set to true if the validation messages should be hidden for the component when shown in Summary. False by default.",
          "default": false,
          "type": "boolean"
        },
        "useComponentGrid": {
          "title": "Use component grid",
          "description": "Set to true to allow summary component to use the grid setup of the referenced component. For group summary, this will apply for all group child components.",
          "default": false,
          "type": "boolean"
        },
        "hideBottomBorder": {
          "title": "Hide bottom border",
          "description": "Set to true to hide the blue dashed border below the summary component. False by default.",
          "default": false,
          "type": "boolean"
        },
        "nextButton": {
          "title": "Display the next button",
          "description": "Set to to true display a \"next\" button as well as the return to summary button",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "TabConfig": {
      "title": "TabConfig",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "title": "Title",
          "description": "Title of the tab",
          "type": "string"
        },
        "icon": {
          "examples": [
            "https://example.com/icon.svg"
          ],
          "type": "string"
        },
        "children": {
          "title": "Children",
          "description": "List of component IDs that should be displayed in the Tab",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "title",
        "children"
      ],
      "additionalProperties": false
    },
    "TextAreaSummaryOverrideProps": {
      "$ref": "#/definitions/ISummaryOverridesCommon"
    },
    "TRBFormComp": {
      "title": "TRBFormComp",
      "type": "object",
      "properties": {
        "tableTitle": {
          "title": "Table title",
          "description": "Title used in the table view (overrides the default title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "shortName": {
          "title": "Short name (for validation)",
          "description": "Alternative name used for required validation messages (overrides the default title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "requiredValidation": {
          "title": "Required validation message",
          "description": "Full validation message shown when the component is required and no value has been entered (overrides both the default and shortName)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      }
    },
    "TRBLabel": {
      "title": "TRBLabel",
      "type": "object",
      "properties": {
        "title": {
          "title": "Title",
          "description": "Label text/title shown above the component",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "description": {
          "title": "Description",
          "description": "Label description shown above the component, below the title",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "help": {
          "title": "Help text",
          "description": "Help text shown in a tooltip when clicking the help button",
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      }
    },
    "TRBSummarizable": {
      "title": "TRBSummarizable",
      "type": "object",
      "properties": {
        "summaryTitle": {
          "title": "Summary title",
          "description": "Title used in the summary view (overrides the default title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        },
        "summaryAccessibleTitle": {
          "title": "Accessible summary title",
          "description": "Title used for aria-label on the edit button in the summary view (overrides the default and summary title)",
          "$ref": "expression.schema.v1.json#/definitions/string"
        }
      }
    },
    "ValidateSubformAction": {
      "title": "ValidateSubformAction",
      "type": "object",
      "properties": {
        "id": {
          "const": "validateSubform"
        },
        "type": {
          "const": "ClientAction"
        },
        "validation": {
          "$ref": "#/definitions/PageValidation"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "additionalProperties": false
    },
    "VideoSrc": {
      "title": "VideoSrc",
      "examples": [
        {
          "nb": "https://example.com/video.mp4",
          "nn": "https://example.com/video.mp4",
          "en": "https://example.com/video.mp4"
        }
      ],
      "type": "object",
      "properties": {
        "nb": {
          "title": "Video source (when using norwegian bokmål language)",
          "type": "string"
        },
        "nn": {
          "title": "Video source (when using norwegian nynorsk language)",
          "type": "string"
        },
        "en": {
          "title": "Video source (when using english language)",
          "type": "string"
        }
      },
      "additionalProperties": {
        "title": "Video source (when using other languages)",
        "type": "string"
      }
    }
  }
}
